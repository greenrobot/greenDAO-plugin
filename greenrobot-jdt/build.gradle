apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'org.greenrobot'
// this artifact only needs to update every time we update the JDT version
// so version it after the contained JDT release
version = '3.12.2'

sourceCompatibility = 1.7

dependencies {
    // "official" packaged version of Eclipse JDT
    // https://objectteams.wordpress.com/2017/01/09/eclipse-neon-2-is-on-maven-central/
    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=484004
    compile 'org.eclipse.jdt:org.eclipse.jdt.core:3.12.2'
}

// include dependencies from shadow configuration in compile tasks
tasks.withType(AbstractCompile) {
    classpath += configurations.shadow
}

shadowJar {
    // exclude any remaining unused files from jar
    exclude 'about_files/**'
    exclude 'ant_tasks/**'
    exclude '*.profile'
    exclude '*.properties'
    exclude '.api_description'
    exclude '.options'
    exclude 'about.html'
    exclude 'jdtCompilerAdapter.jar'
    exclude 'plugin.xml'
    exclude 'profile.list'

    // relocate JDT and all its dependencies, may conflict as they are available in many artifacts
    // main reason: Android plugin includes org.eclipse.jdt.core.compiler:ecj which has conflicting JDT core packaged
    relocate 'org.eclipse', "${project.group}.eclipse"
    relocate 'org.apache', "${project.group}.apache"
    relocate 'org.osgi', "${project.group}.osgi"

    classifier = null // would default to "all"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from 'README'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from 'README'
}

artifacts {
    archives shadowJar
    archives javadocJar
    archives sourcesJar
}

// modify uploadArchives task to reflect how shadow plugin configures its uploadShadow task
uploadArchives {
    repositories {
        mavenDeployer {
            // Basic definitions are defined in root project

            // use shadow configuration
            configuration = project.configurations.shadow
            // only include non-shadowed dependencies
            pom.scopeMappings.mappings.remove(project.configurations.compile)
            pom.scopeMappings.mappings.remove(project.configurations.runtime)
            pom.scopeMappings.addMapping(MavenPlugin.RUNTIME_PRIORITY, project.configurations.shadow, Conf2ScopeMappingContainer.RUNTIME)

            pom.project {
                name 'greenDAO JDT repackaged'
                description 'JDT repackaged for greenDAO, the light and fast ORM for Android'
            }
        }
    }
}